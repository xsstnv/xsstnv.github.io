{"version":3,"sources":["components/BrowserMenu/BrowserMenu.module.css","components/MobileMenu/MobileMenu.module.css","components/Trigger/Trigger.module.css","components/Logo/Logo.module.css","components/MarkdownReader/MarkdownReader.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","redux/reducers/routing.js","redux/reducers/navigation.js","redux/reducers/index.js","redux/actions/types.js","store.js","config.js","client.js","components/Menu/Menu.js","redux/actions/navigation.js","components/BrowserMenu/BrowserMenu.js","components/Trigger/Trigger.js","components/MobileMenu/MobileMenu.js","components/Logo/Logo.js","components/Header/Header.js","components/CodeBlock/CodeBlock.js","components/MarkdownReader/MarkdownReader.js","components/Router/Router.js","redux/actions/routing.js","components/Content/Content.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js","components/Content/Content.module.css"],"names":["module","exports","initialState","routing","navigation","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","config","baseURL","pagesPath","configPath","axiosInstance","axios","create","connect","dispatch","getNavigation","client","get","then","response","data","withRouter","classes","history","React","useEffect","className","Menu","Inner","length","map","item","key","ListItem","onClick","push","uri","label","Fragment","Trigger","props","click","xmlns","fill","viewBox","d","useState","visible","setVisible","Logo","onInit","typewriter","typeString","pauseFor","deleteChars","start","Header","Right","isBrowser","isMobile","CodeBlock","this","language","value","style","tomorrow","PureComponent","defaultProps","MarkdownReader","_isMounted","emojiSupport","text","replace","name","emoji","getUnicode","path","fetch","setState","Content","source","renderers","code","Component","getRouting","exact","url","Pages","Main","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13e74ffc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"BrowserMenu_Menu__2Mk0w\",\"Inner\":\"BrowserMenu_Inner__1Q-2m\",\"ListItem\":\"BrowserMenu_ListItem__1oUif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"MobileMenu_Menu__1uPH4\",\"Inner\":\"MobileMenu_Inner__1n_7k\",\"ListItem\":\"MobileMenu_ListItem__xiQ9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Trigger\":\"Trigger_Trigger__KJhjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"MarkdownReader_Content__3If32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"Inner\":\"Header_Inner__3IEtE\",\"Right\":\"Header_Right__2Cp5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__238hM\",\"Inner\":\"Footer_Inner__15Jjo\",\"Content\":\"Footer_Content__1PRf8\"};","import { GET_ROUTING } from '../actions/types';\n\nconst initialState = {\n    routing: null,\n};\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n\n        case GET_ROUTING:\n            return {\n                ...state,\n                routing: action.payload\n            };\n\n        default:\n            return state;\n    }\n};","import { GET_NAVIGATION } from '../actions/types';\n\nconst initialState = {\n    navigation: null,\n};\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n\n        case GET_NAVIGATION:\n            return {\n                ...state,\n                navigation: action.payload\n            };\n\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport routing from './routing';\nimport navigation from './navigation';\n\nexport default combineReducers({\n  navigation,\n  routing,\n});","export const GET_ROUTING = \"GET_ROUTING\";\nexport const GET_NAVIGATION = \"GET_NAVIGATION\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./redux/reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","export const config = {\n    external: {\n        baseURL: \"https://raw.githubusercontent.com\",\n        pagesPath: \"/xsstnv/stnv-pages/main/pages/\",\n        configPath: \"/xsstnv/stnv-pages/main/config/\"\n    },\n    internal: {\n        baseURL: \"\",\n        pagesPath: \"/pages/\",\n        configPath: \"/config/\"\n    }\n}","import axios from \"axios\";\n\nimport { config } from \"./config\";\n\nvar axiosInstance = axios.create({\n  baseURL: config[process.env.REACT_APP_ENV].baseURL\n});\n\nexport default axiosInstance;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getNavigation } from '../../redux/actions/navigation';\n\nconst Menu = ({ classes, history, navigation, getNavigation }) => {\n\n    React.useEffect(() => {\n        getNavigation();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <nav className={classes.Menu}>\n            <ul className={classes.Inner}>\n                {navigation && navigation.navigation && navigation.navigation.length && navigation.navigation.map((item, key) => (\n                    <li className={classes.ListItem} onClick={() => history.push(item.uri)} key={key}>{item.label}</li>\n                ))}\n            </ul>\n        </nav>\n    );\n}\n\nconst mapStateToProps = state => ({\n    navigation: state.navigation,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getNavigation: () => dispatch(getNavigation()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Menu));","import { GET_NAVIGATION } from './types';\nimport client from '../../client';\nimport { config } from '../../config';\n\nconst navigation = 'navigation.json';\n\nexport const getNavigation = () => dispatch => {\n    client\n        .get(config[process.env.REACT_APP_ENV].configPath + navigation)\n        .then(response => {\n            if (response.data) {\n                dispatch({\n                    type: GET_NAVIGATION,\n                    payload: response.data\n                });\n            }\n        })\n\n};","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './BrowserMenu.module.css';\nimport Menu from '../Menu/Menu';\n\nconst BrowserMenu = () => (\n    <React.Fragment>\n        <Menu classes={classes} />\n    </React.Fragment>\n);\n\nexport default withRouter(BrowserMenu);","import React from 'react';\nimport classes from './Trigger.module.css';\n\nconst Trigger = props => (\n    <span className={classes.Trigger} onClick={props.click}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#333\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"></path>\n        </svg>\n    </span>\n);\n\nexport default Trigger;","import React from 'react';\nimport { withRouter } from 'react-router';\n\nimport classes from './MobileMenu.module.css';\nimport Trigger from '../Trigger/Trigger';\nimport Menu from '../Menu/Menu';\n\nconst MobileMenu = () => {\n\n    const [visible, setVisible] = React.useState(false);\n\n    const click = () => setVisible(!visible);\n\n    return (\n        <React.Fragment>\n            {visible && <Menu classes={classes} />}\n            <Trigger click={click} />\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(MobileMenu);","import React from 'react';\nimport Typewriter from 'typewriter-effect';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Logo.module.css'\n\nconst Logo = props => {\n    const onLogoClick = () => props.history.push(\"/\");\n\n    const onInit = typewriter => {\n        typewriter\n            .typeString('> $ cd /root/')\n            .pauseFor(500)\n            .deleteChars(5)\n            .typeString('home/')\n            .start();\n    };\n\n    return (\n        <div className={classes.Logo} onClick={onLogoClick}>\n            <Typewriter onInit={onInit} />\n        </div>\n    );\n}\n\nexport default withRouter(Logo);","import React from 'react';\nimport { isBrowser, isMobile } from \"react-device-detect\";\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Header.module.css';\nimport BrowserMenu from '../BrowserMenu/BrowserMenu';\nimport MobileMenu from '../MobileMenu/MobileMenu';\nimport Logo from '../Logo/Logo';\n\nconst Header = () => (\n    <div className={classes.Header}>\n        <div className={classes.Inner}>\n            <Logo />\n            <span className={classes.Right}>\n                {isBrowser && <BrowserMenu />}\n                {isMobile && <MobileMenu />}\n            </span>\n        </div>\n    </div>\n);\n\nexport default withRouter(Header)","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass CodeBlock extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={tomorrow}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport emoji from 'emoji-dictionary';\n\nimport CodeBlock from \"../CodeBlock/CodeBlock\";\nimport { config } from '../../config';\nimport classes from './MarkdownReader.module.css';\n\nclass MarkdownReader extends React.Component {\n\n    _isMounted = false;\n\n    state = {\n        data: null,\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n\n        if (this.props.path) {\n            fetch(config[process.env.REACT_APP_ENV].baseURL + this.props.path).then((response) => response.text()).then(text => {\n                if (this._isMounted) {\n                    this.setState({ data: text });\n                }\n            })\n        }\n    }\n\n    emojiSupport = text => text.value.replace(/:\\w+:/gi, name => emoji.getUnicode(name))\n\n    render() {\n\n        if (!this.state.data) {\n            return <h3>Loading...</h3>\n        }\n\n        return (\n            <div className={classes.Content}>\n                <ReactMarkdown source={this.state.data}\n                    renderers={{\n                        text: this.emojiSupport,\n                        code: CodeBlock,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default MarkdownReader;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getRouting } from '../../redux/actions/routing';\nimport MarkdownReader from '../MarkdownReader/MarkdownReader';\nimport { config } from '../../config';\n\nconst Router = ({ routing = {}, getRouting = () => null }) => {\n\n    React.useEffect(() => {\n        getRouting();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Switch>\n            { routing && routing.routing && routing.routing.length && routing.routing.map((item, key) => (\n                <Route key={key} exact path={item.url}>\n                    <MarkdownReader path={config[process.env.REACT_APP_ENV].pagesPath + item.path} />\n                </Route>\n            ))}\n        </Switch>\n    );\n}\n\nconst mapStateToProps = state => ({\n    routing: state.routing,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getRouting: () => dispatch(getRouting()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);","import { GET_ROUTING } from './types';\nimport client from '../../client';\nimport { config } from '../../config';\n\nconst routing = 'routing.json';\n\nexport const getRouting = () => dispatch => {\n    client\n        .get(config[process.env.REACT_APP_ENV].configPath + routing)\n        .then(response => {\n            if (response.data) {\n                dispatch({\n                    type: GET_ROUTING,\n                    payload: response.data\n                });\n            }\n        })\n\n};","import React from 'react';\n\nimport classes from './Content.module.css';\nimport Router from '../Router/Router';\n\nconst Pages = () => (\n    <div className={classes.Content}>\n        <main className={classes.Main}>\n            <Router />\n        </main>\n    </div>\n);\n\nexport default Pages;","import React from 'react';\n\nimport classes from './Footer.module.css';\n\nconst Footer = () => (\n    <div className={classes.Footer}>\n        <div className={classes.Inner}>\n            <div className={classes.Content}>\n                Project maintained by&#160;<a href=\"https://github.com/xsstnv/\">Martin Stoynov</a>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport Footer from './components/Footer/Footer';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Header />\n      <Content />\n      <Footer />\n    </Router>\n  </Provider>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__hDgPc\",\"Main\":\"Content_Main__2p1MD\"};"],"sourceRoot":""}