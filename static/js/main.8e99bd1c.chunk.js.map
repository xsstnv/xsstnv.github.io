{"version":3,"sources":["components/Toggle/Toggle.module.css","components/BrowserMenu/BrowserMenu.module.css","components/MobileMenu/MobileMenu.module.css","components/Trigger/Trigger.module.css","components/Logo/Logo.module.css","components/MarkdownReader/MarkdownReader.module.css","components/Header/Header.module.css","components/Footer/Footer.module.css","redux/reducers/mapping.js","redux/reducers/index.js","redux/actions/types.js","store.js","constants/MenuItems.js","components/Menu/Menu.js","components/BrowserMenu/BrowserMenu.js","components/Trigger/Trigger.js","components/MobileMenu/MobileMenu.js","components/Logo/Logo.js","components/Header/Header.js","config.js","client.js","components/CodeBlock/CodeBlock.js","components/MarkdownReader/MarkdownReader.js","components/Routes/Routes.js","redux/actions/mapping.js","components/Content/Content.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js","components/Content/Content.module.css"],"names":["module","exports","initialState","mapping","combineReducers","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","MenuItems","label","uri","withRouter","classes","history","className","Menu","Inner","map","menuItem","key","ListItem","onClick","push","Fragment","Trigger","props","click","xmlns","fill","viewBox","d","React","useState","visible","setVisible","Logo","onInit","typewriter","typeString","pauseFor","deleteChars","start","Header","Right","isBrowser","isMobile","config","baseURL","pagesPath","configPath","axiosInstance","axios","create","CodeBlock","this","language","value","style","tomorrow","PureComponent","defaultProps","MarkdownReader","_isMounted","data","emojiSupport","text","replace","name","emoji","getUnicode","path","fetch","then","response","setState","Content","source","renderers","code","Component","connect","dispatch","getMapping","client","get","useEffect","length","item","exact","url","Pages","Main","Footer","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e99bd1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toggle\":\"Toggle_Toggle__1VIFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"BrowserMenu_Menu__2Mk0w\",\"Inner\":\"BrowserMenu_Inner__1Q-2m\",\"ListItem\":\"BrowserMenu_ListItem__1oUif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"MobileMenu_Menu__1uPH4\",\"Inner\":\"MobileMenu_Inner__1n_7k\",\"ListItem\":\"MobileMenu_ListItem__xiQ9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Trigger\":\"Trigger_Trigger__KJhjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"MarkdownReader_Content__3If32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2C_Ub\",\"Inner\":\"Header_Inner__3IEtE\",\"Right\":\"Header_Right__2Cp5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__238hM\",\"Inner\":\"Footer_Inner__15Jjo\",\"Content\":\"Footer_Content__1PRf8\"};","import { GET_MAPPING } from '../actions/types';\n\nconst initialState = {\n    mapping: null,\n};\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n\n        case GET_MAPPING:\n            return {\n                ...state,\n                mapping: action.payload\n            };\n\n        default:\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport mapping from './mapping';\n\nexport default combineReducers({\n  mapping,\n});","export const GET_MAPPING = \"GET_MAPPING\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./redux/reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","const MenuItems = [\n    {\n        label: 'About',\n        uri: 'about'\n    },\n    {\n        label: 'Posts',\n        uri: 'posts'\n    },\n    {\n        label: 'Project',\n        uri: 'project'\n    }\n];\n\nexport default MenuItems;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport MenuItems from '../../constants/MenuItems';\n\nconst Menu = ({ classes, history }) => (\n    <nav className={classes.Menu}>\n        <ul className={classes.Inner}>\n            {MenuItems.map((menuItem,key) => (\n                <li className={classes.ListItem} onClick={() => history.push(menuItem.uri)} key={key}>{menuItem.label}</li>\n            ))}\n        </ul>\n    </nav>\n);\n\nexport default withRouter(Menu);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Toggle from '../Toggle/Toggle';\nimport classes from './BrowserMenu.module.css';\nimport Menu from '../Menu/Menu';\n\nconst BrowserMenu = () => (\n    <React.Fragment>\n        <Menu classes={classes} />\n        {/* <Toggle /> */}\n    </React.Fragment>\n);\n\nexport default withRouter(BrowserMenu);","import React from 'react';\nimport classes from './Trigger.module.css';\n\nconst Trigger = props => (\n    <span className={classes.Trigger} onClick={props.click}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#333\" viewBox=\"0 0 24 24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n            <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"></path>\n        </svg>\n    </span>\n);\n\nexport default Trigger;","import React from 'react';\nimport { withRouter } from 'react-router';\n\nimport Toggle from '../Toggle/Toggle';\nimport classes from './MobileMenu.module.css';\nimport Trigger from '../Trigger/Trigger';\nimport Menu from '../Menu/Menu';\n\nconst MobileMenu = () => {\n\n    const [visible, setVisible] = React.useState(false);\n\n    const click = () => setVisible(!visible);\n\n    return (\n        <React.Fragment>\n            {visible && <Menu classes={classes} />}\n            {/* <Toggle /> */}\n            <Trigger click={click} />\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(MobileMenu);","import React from 'react';\nimport Typewriter from 'typewriter-effect';\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Logo.module.css'\n\nconst Logo = props => {\n    const onLogoClick = () => props.history.push(\"/\");\n\n    const onInit = typewriter => {\n        typewriter\n            .typeString('> $ cd /root/')\n            .pauseFor(500)\n            .deleteChars(5)\n            .typeString('home/')\n            .start();\n    };\n\n    return (\n        <div className={classes.Logo} onClick={onLogoClick}>\n            <Typewriter onInit={onInit} />\n        </div>\n    );\n}\n\nexport default withRouter(Logo);","import React from 'react';\nimport { isBrowser, isMobile } from \"react-device-detect\";\nimport { withRouter } from 'react-router-dom';\n\nimport classes from './Header.module.css';\nimport BrowserMenu from '../BrowserMenu/BrowserMenu';\nimport MobileMenu from '../MobileMenu/MobileMenu';\nimport Logo from '../Logo/Logo';\n\nconst Header = () => (\n    <div className={classes.Header}>\n        <div className={classes.Inner}>\n            <Logo />\n            <span className={classes.Right}>\n                {isBrowser && <BrowserMenu />}\n                {isMobile && <MobileMenu />}\n            </span>\n        </div>\n    </div>\n);\n\nexport default withRouter(Header)","export const config = {\n    external: {\n        baseURL: \"https://raw.githubusercontent.com\",\n        pagesPath: \"/xsstnv/stnv-pages/main/pages/\",\n        configPath: \"/xsstnv/stnv-pages/main/config/\"\n    },\n    internal: {\n        baseURL: \"\",\n        pagesPath: \"/pages/\",\n        configPath: \"/config/\"\n    }\n}","import axios from \"axios\";\n\nimport { config } from \"./config\";\n\nvar axiosInstance = axios.create({\n  baseURL: config[process.env.REACT_APP_ENV].baseURL\n});\n\nexport default axiosInstance;","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { tomorrow } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass CodeBlock extends PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={tomorrow}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport emoji from 'emoji-dictionary';\n\nimport CodeBlock from \"../CodeBlock/CodeBlock\";\nimport { config } from '../../config';\nimport classes from './MarkdownReader.module.css';\n\nclass MarkdownReader extends React.Component {\n\n    _isMounted = false;\n\n    state = {\n        data: null,\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n\n        if (this.props.path) {\n            fetch(config[process.env.REACT_APP_ENV].baseURL + this.props.path).then((response) => response.text()).then(text => {\n                if (this._isMounted) {\n                    this.setState({ data: text });\n                }\n            })\n        }\n    }\n\n    emojiSupport = text => text.value.replace(/:\\w+:/gi, name => emoji.getUnicode(name))\n\n    render() {\n\n        if (!this.state.data) {\n            return <h3>Loading...</h3>\n        }\n\n        return (\n            <div className={classes.Content}>\n                <ReactMarkdown source={this.state.data}\n                    renderers={{\n                        text: this.emojiSupport,\n                        code: CodeBlock,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default MarkdownReader;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getMapping } from '../../redux/actions/mapping';\nimport MarkdownReader from '../MarkdownReader/MarkdownReader';\nimport { config } from '../../config';\n\nconst Routes = props => {\n\n    React.useEffect(() => {\n        props.getMapping();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Switch>\n            { props.mapping && props.mapping.mapping && props.mapping.mapping.length && props.mapping.mapping.map((item, key) => (\n                <Route key={key} exact path={item.url}>\n                    <MarkdownReader path={config[process.env.REACT_APP_ENV].pagesPath + item.path} />\n                </Route>\n            ))}\n        </Switch>\n    );\n}\n\nconst mapStateToProps = state => ({\n    mapping: state.mapping,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getMapping: () => dispatch(getMapping()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);","import { GET_MAPPING } from './types';\nimport client from '../../client';\nimport { config } from '../../config';\n\nconst mapping = 'mapping.json';\n\nexport const getMapping = () => dispatch => {\n    client\n        .get(config[process.env.REACT_APP_ENV].configPath + mapping)\n        .then(response => {\n            if (response.data) {\n                dispatch({\n                    type: GET_MAPPING,\n                    payload: response.data\n                });\n            }\n        })\n\n};","import React from 'react';\n\nimport classes from './Content.module.css';\nimport Routes from '../Routes/Routes';\n\nconst Pages = () => (\n    <div className={classes.Content}>\n        <main className={classes.Main}>\n            <Routes />\n        </main>\n    </div>\n);\n\nexport default Pages;","import React from 'react';\n\nimport classes from './Footer.module.css';\n\nconst Footer = () => (\n    <div className={classes.Footer}>\n        <div className={classes.Inner}>\n            <div className={classes.Content}>\n                Project maintained by&#160;<a href=\"https://github.com/xsstnv/\">Martin Stoynov</a>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\nimport Header from './components/Header/Header';\nimport Content from './components/Content/Content';\nimport Footer from './components/Footer/Footer';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Header />\n      <Content />\n      <Footer />\n    </Router>\n  </Provider>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Content_Content__hDgPc\",\"Main\":\"Content_Main__2p1MD\"};"],"sourceRoot":""}